basePath: /api/v1
definitions:
  orderRequest.Order:
    properties:
      addressId:
        type: integer
      collectDate:
        type: string
      note:
        type: string
      orderType:
        type: string
      serviceType:
        type: string
    required:
    - addressId
    - collectDate
    - orderType
    - serviceType
    type: object
  orderRequest.Payment:
    properties:
      transactionId:
        type: string
    required:
    - transactionId
    type: object
  orderResource.Order:
    properties:
      addressId:
        type: integer
      collectDate:
        type: string
      createdAt:
        type: string
      estimateDate:
        type: string
      id:
        type: string
      note:
        type: string
      orderType:
        type: string
      price:
        type: number
      serviceType:
        type: string
      status:
        type: string
      transactionId:
        type: string
      updatedAt:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/orderResource.User'
        description: UserID        int              `json:"userId" gorm:"not null;index"`
      weight:
        type: number
    type: object
  orderResource.User:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      image:
        type: string
      lastName:
        type: string
      role:
        type: string
    type: object
  userRequest.Google:
    properties:
      fcmToken:
        type: string
      idToken:
        type: string
    type: object
  userRequest.Login:
    properties:
      email:
        type: string
      fcmToken:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  userRequest.Register:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        maxLength: 130
        minLength: 6
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    type: object
  userRequest.UpdatePassword:
    properties:
      confirmPassword:
        type: string
      newPassword:
        maxLength: 130
        minLength: 6
        type: string
      oldPassword:
        type: string
    required:
    - confirmPassword
    - newPassword
    - oldPassword
    type: object
  userRequest.UpdatePicture:
    properties:
      Image:
        items:
          type: integer
        type: array
    required:
    - Image
    type: object
  userRequest.UpdateProfile:
    properties:
      email:
        type: string
      firstName:
        minLength: 2
        type: string
      lastName:
        minLength: 2
        type: string
    type: object
  userResource.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      image:
        type: string
      lastName:
        type: string
      role:
        type: string
    type: object
  userResource.WithToken:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
      user:
        $ref: '#/definitions/userResource.User'
    type: object
host: localhost:8080
info:
  contact:
    email: marlendotedots@gmail.com
    name: Marlen E. Satriani
  description: Swagger for washit app.
  license:
    name: MIT
    url: https://github.com/MartinHeinz/go-project-blueprint/blob/master/LICENSE
  termsOfService: http://swagger.io/terms/
  title: Washit API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/userRequest.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.WithToken'
      summary: Login as a user
      tags:
      - User
  /auth/login/google:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/userRequest.Google'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.WithToken'
      summary: Login with Google
      tags:
      - User
  /auth/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.User'
      security:
      - ApiKeyAuth: []
      summary: Logout the current logged-in user
      tags:
      - User
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: accessToken
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh the user's access token
      tags:
      - User
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/userRequest.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/userResource.User'
      summary: Register a new user
      tags:
      - User
  /order:
    post:
      consumes:
      - application/json
      parameters:
      - description: Order details
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/orderRequest.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Create a new order
      tags:
      - Order
  /order/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Get order details by ID
      tags:
      - Order
    put:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Order details
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/orderRequest.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Edit an existing order
      tags:
      - Order
  /order/{id}/accept:
    put:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Accept an order
      tags:
      - Order
  /order/{id}/cancel:
    put:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Cancel an existing order
      tags:
      - Order
  /order/{id}/complete:
    put:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Complete an order
      tags:
      - Order
  /order/{id}/pay:
    put:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Payment details
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/orderRequest.Payment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Pay for an order
      tags:
      - Order
  /order/{id}/reject:
    put:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Reject an order
      tags:
      - Order
  /order/{id}/weight/{weight}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Weight
        in: path
        name: weight
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Update the weight of an order
      tags:
      - Order
  /orders:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Get all orders for the authenticated user
      tags:
      - Order
  /orders/all:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Get all orders
      tags:
      - Order
  /orders/user/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderResource.Order'
      security:
      - ApiKeyAuth: []
      summary: Get all orders for a specific user
      tags:
      - Order
  /profile/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.User'
      security:
      - ApiKeyAuth: []
      summary: Get the current logged-in user
      tags:
      - User
  /profile/update:
    put:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/userRequest.UpdateProfile'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/userResource.User'
      security:
      - ApiKeyAuth: []
      summary: Update the current logged-in user
      tags:
      - User
  /profile/update/password:
    put:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/userRequest.UpdatePassword'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/userResource.User'
      security:
      - ApiKeyAuth: []
      summary: Update the current logged-in user's password
      tags:
      - User
  /profile/update/picture:
    put:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/userRequest.UpdatePicture'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.User'
      security:
      - ApiKeyAuth: []
      summary: Update the current logged-in user's profile picture
      tags:
      - User
  /user/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.User'
      security:
      - ApiKeyAuth: []
      summary: Get a user by ID
      tags:
      - User
  /user/{id}/ban:
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.User'
      security:
      - ApiKeyAuth: []
      summary: Ban a user
      tags:
      - User
  /user/{id}/unban:
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.User'
      security:
      - ApiKeyAuth: []
      summary: Unban a user
      tags:
      - User
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.User'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - User
  /users/banned:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.User'
      security:
      - ApiKeyAuth: []
      summary: Get all banned users
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
