basePath: /api/v1
definitions:
  userRequest.Login:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  userRequest.Register:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      password:
        maxLength: 130
        minLength: 3
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    type: object
  userResource.HideToken:
    properties:
      user:
        $ref: '#/definitions/userResource.User'
    type: object
  userResource.ShowToken:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
      user:
        $ref: '#/definitions/userResource.User'
    type: object
  userResource.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      image:
        type: string
      lastName:
        type: string
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: marlendotedots@gmail.com
    name: Marlen E. Satriani
  description: Swagger for washit app.
  license:
    name: MIT
    url: https://github.com/MartinHeinz/go-project-blueprint/blob/master/LICENSE
  termsOfService: http://swagger.io/terms/
  title: Washit API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/userRequest.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.ShowToken'
      summary: Login as a user
      tags:
      - User
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/userRequest.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/userResource.HideToken'
      summary: Register a new user
      tags:
      - User
  /profile/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.HideToken'
      security:
      - ApiKeyAuth: []
      summary: Get the current logged-in user
      tags:
      - User
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userResource.User'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
